[versions]
# Kotlin and Core
kotlin = "1.9.20"
kotlinx-coroutines = "1.7.3"
kotlinx-serialization = "1.6.0"
kotlinx-datetime = "0.4.1"

# Ktor
ktor = "2.3.5"

# Database
postgresql = "42.7.1"
hikaricp = "5.1.0"
exposed = "0.44.1"

# Redis
jedis = "5.1.0"

# Logging
logback = "1.4.14"
kotlin-logging = "5.1.1"

# Configuration
typesafe-config = "1.4.3"

# Testing
kotest = "5.7.2"
mockk = "1.13.8"
testcontainers = "1.19.3"

# Crypto
bouncycastle = "1.76"

# UUID
uuid = "0.8.2"

# Compose
compose = "1.5.11"

# Gradle plugins
kover = "0.7.4"

[libraries]
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

# Ktor Server
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt-jvm", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging-jvm", version.ref = "ktor" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages-jvm", version.ref = "ktor" }
ktor-server-rate-limit = { module = "io.ktor:ktor-server-rate-limit-jvm", version.ref = "ktor" }
ktor-server-swagger = { module = "io.ktor:ktor-server-swagger-jvm", version.ref = "ktor" }
ktor-server-openapi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

# Ktor Client
ktor-client-core = { module = "io.ktor:ktor-client-core-jvm", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio-jvm", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation-jvm", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth-jvm", version.ref = "ktor" }

# Database
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
hikaricp = { module = "com.zaxxer:HikariCP", version.ref = "hikaricp" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }

# Redis
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }

# Logging
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging-jvm", version.ref = "kotlin-logging" }

# Configuration
typesafe-config = { module = "com.typesafe:config", version.ref = "typesafe-config" }

# Testing - Common
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }

# Testing - JVM
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
kotest-extensions-testcontainers = { module = "io.kotest:kotest-extensions-testcontainers", version = "1.3.4" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# Testing - JS
kotest-framework-engine-js = { module = "io.kotest:kotest-framework-engine-js", version.ref = "kotest" }

# Crypto
bouncycastle = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncycastle" }

# Utilities
uuid = { module = "com.benasher44:uuid", version.ref = "uuid" }

[bundles]
ktor-server = [
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-content-negotiation",
    "ktor-serialization-kotlinx-json",
    "ktor-server-auth",
    "ktor-server-auth-jwt",
    "ktor-server-cors",
    "ktor-server-call-logging",
    "ktor-server-status-pages",
    "ktor-server-rate-limit",
    "ktor-server-swagger",
    "ktor-server-openapi"
]

ktor-client = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-content-negotiation",
    "ktor-client-auth"
]

database = [
    "postgresql",
    "hikaricp",
    "exposed-core",
    "exposed-dao",
    "exposed-jdbc",
    "exposed-kotlin-datetime",
    "exposed-json"
]

logging = [
    "logback-classic",
    "kotlin-logging"
]

testing-common = [
    "kotest-framework-engine",
    "kotest-assertions-core",
    "kotest-property",
    "kotest-framework-datatest",
    "kotlinx-coroutines-test"
]

testing-jvm = [
    "kotest-runner-junit5",
    "mockk",
    "testcontainers-core",
    "testcontainers-postgresql",
    "testcontainers-junit-jupiter",
    "kotlin-test-junit"
]

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }