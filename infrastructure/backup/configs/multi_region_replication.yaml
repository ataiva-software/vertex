# Multi-Region Replication Configuration for Vertex DevOps Suite
# This configuration defines the setup for multi-region replication
# to ensure high availability and disaster recovery capabilities

# Primary region configuration
primary_region:
  name: us-east-1
  provider: aws
  vpc_id: vpc-primary
  subnets:
    - subnet-primary-1a
    - subnet-primary-1b
    - subnet-primary-1c
  availability_zones:
    - us-east-1a
    - us-east-1b
    - us-east-1c

# Secondary region configuration
secondary_region:
  name: us-west-2
  provider: aws
  vpc_id: vpc-secondary
  subnets:
    - subnet-secondary-2a
    - subnet-secondary-2b
    - subnet-secondary-2c
  availability_zones:
    - us-west-2a
    - us-west-2b
    - us-west-2c

# Database replication configuration
database_replication:
  # PostgreSQL replication
  postgres:
    replication_type: logical  # Options: logical, physical
    replication_slots:
      - name: vertex_vault_slot
        database: vertex_vault
        plugin: pglogical
      - name: vertex_flow_slot
        database: vertex_flow
        plugin: pglogical
      - name: vertex_task_slot
        database: vertex_task
        plugin: pglogical
      - name: vertex_hub_slot
        database: vertex_hub
        plugin: pglogical
      - name: vertex_sync_slot
        database: vertex_sync
        plugin: pglogical
      - name: vertex_insight_slot
        database: vertex_insight
        plugin: pglogical
    primary:
      host: postgres.primary.vertex.internal
      port: 5432
      user: replication_user
      password_secret: /vertex/secrets/postgres/replication_password
    secondary:
      host: postgres.secondary.vertex.internal
      port: 5432
      user: replication_user
      password_secret: /vertex/secrets/postgres/replication_password
    monitoring:
      lag_threshold_seconds: 300
      alert_channels:
        - email
        - slack
    failover:
      automatic: true
      max_lag_seconds: 600
      promote_command: "/usr/local/bin/promote_postgres_replica.sh"

  # Redis replication
  redis:
    replication_type: redis-sentinel
    primary:
      host: redis.primary.vertex.internal
      port: 6379
      password_secret: /vertex/secrets/redis/replication_password
    secondary:
      host: redis.secondary.vertex.internal
      port: 6379
      password_secret: /vertex/secrets/redis/replication_password
    sentinel:
      quorum: 2
      instances:
        - host: sentinel-1.vertex.internal
          port: 26379
        - host: sentinel-2.vertex.internal
          port: 26379
        - host: sentinel-3.vertex.internal
          port: 26379
    monitoring:
      lag_threshold_seconds: 60
      alert_channels:
        - email
        - slack
    failover:
      automatic: true
      timeout_ms: 30000

# Data synchronization configuration
data_sync:
  # S3 bucket replication for backups
  s3_replication:
    enabled: true
    source_bucket: vertex-backups-primary
    destination_bucket: vertex-backups-secondary
    replication_role: arn:aws:iam::123456789012:role/vertex-s3-replication-role
    kms_key_id: arn:aws:kms:us-west-2:123456789012:key/vertex-backup-key
    rules:
      - prefix: postgres/
        status: Enabled
      - prefix: redis/
        status: Enabled
      - prefix: configs/
        status: Enabled

  # Configuration synchronization
  config_sync:
    enabled: true
    method: git
    repository: git@github.com:ataivadev/vertex-configs.git
    branch: main
    sync_interval_minutes: 15
    directories:
      - /etc/vertex/configs
      - /opt/vertex/config

# Network configuration
network:
  vpn:
    enabled: true
    type: ipsec
    primary_endpoint: vpn.primary.vertex.internal
    secondary_endpoint: vpn.secondary.vertex.internal
    shared_secret_secret: /vertex/secrets/network/vpn_shared_secret
    
  dns:
    primary_zone: primary.vertex.internal
    secondary_zone: secondary.vertex.internal
    failover_policy: automatic
    ttl_seconds: 60

# Load balancing configuration
load_balancing:
  global:
    provider: route53
    health_check:
      protocol: https
      port: 443
      path: /health
      interval_seconds: 30
      failure_threshold: 3
    policy: latency
    failover:
      primary_region: us-east-1
      secondary_region: us-west-2
  
  regional:
    provider: aws-alb
    primary:
      name: vertex-alb-primary
      subnets:
        - subnet-primary-1a
        - subnet-primary-1b
        - subnet-primary-1c
      security_groups:
        - sg-primary-alb
    secondary:
      name: vertex-alb-secondary
      subnets:
        - subnet-secondary-2a
        - subnet-secondary-2b
        - subnet-secondary-2c
      security_groups:
        - sg-secondary-alb

# Monitoring and alerting configuration
monitoring:
  replication_lag:
    postgres:
      check_interval_seconds: 60
      warning_threshold_seconds: 300
      critical_threshold_seconds: 600
    redis:
      check_interval_seconds: 30
      warning_threshold_seconds: 60
      critical_threshold_seconds: 120
  
  alerts:
    channels:
      email:
        recipients:
          - devops@example.com
          - oncall@example.com
      slack:
        webhook_url_secret: /vertex/secrets/alerts/slack_webhook_url
        channel: "#vertex-alerts"
      pagerduty:
        integration_key_secret: /vertex/secrets/alerts/pagerduty_key
        service_id: PXXXXX

# Failover configuration
failover:
  automatic:
    enabled: true
    conditions:
      - type: region_down
        detection_time_seconds: 300
      - type: database_lag
        threshold_seconds: 600
      - type: service_health
        unhealthy_percentage: 75
        detection_time_seconds: 180
  
  manual:
    authorized_roles:
      - DevOpsAdmin
      - EmergencyResponder
    procedure_document: "https://wiki.example.com/vertex/disaster-recovery/failover-procedure"
    checklist:
      - verify_replication_status
      - notify_stakeholders
      - execute_failover
      - verify_services
      - update_dns
      - notify_completion

# Recovery configuration
recovery:
  rto_minutes: 15  # Recovery Time Objective
  rpo_minutes: 5   # Recovery Point Objective
  priority_services:
    - api-gateway
    - vault-service
    - hub-service
  procedures:
    region_failure: "https://wiki.example.com/vertex/disaster-recovery/region-failure"
    database_corruption: "https://wiki.example.com/vertex/disaster-recovery/database-corruption"
    service_failure: "https://wiki.example.com/vertex/disaster-recovery/service-failure"