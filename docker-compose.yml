services:
  # Infrastructure Services
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: eden-postgres
    environment:
      POSTGRES_DB: eden_dev
      POSTGRES_USER: eden
      POSTGRES_PASSWORD: dev_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eden -d eden_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eden_network

  redis:
    image: redis:7-alpine
    container_name: eden-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - eden_network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: infrastructure/docker/base/service.Dockerfile
      args:
        SERVICE_NAME: api-gateway
    container_name: eden-api-gateway
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - DATABASE_URL=postgresql://eden:dev_password@postgres:5432/eden_dev
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
      - JWT_SECRET=dev_jwt_secret_change_in_production
      - ENCRYPTION_KEY=dev_encryption_key_change_in_production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - eden_network

  # Eden Vault Service
  vault-service:
    build:
      context: .
      dockerfile: infrastructure/docker/base/service.Dockerfile
      args:
        SERVICE_NAME: vault
    container_name: eden-vault
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - DATABASE_URL=postgresql://eden:dev_password@postgres:5432/eden_dev
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_URL=http://api-gateway:8080
      - ENCRYPTION_KEY=dev_encryption_key_change_in_production
      - LOG_LEVEL=debug
    ports:
      - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    networks:
      - eden_network

  # Eden Hub Service
  hub-service:
    build:
      context: .
      dockerfile: infrastructure/docker/base/service.Dockerfile
      args:
        SERVICE_NAME: hub
    container_name: eden-hub
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - DATABASE_URL=postgresql://eden:dev_password@postgres:5432/eden_dev
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_URL=http://api-gateway:8080
      - LOG_LEVEL=debug
    ports:
      - "8082:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    networks:
      - eden_network

  # Eden Flow Service
  flow-service:
    build:
      context: .
      dockerfile: infrastructure/docker/base/service.Dockerfile
      args:
        SERVICE_NAME: flow
    container_name: eden-flow
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - DATABASE_URL=postgresql://eden:dev_password@postgres:5432/eden_dev
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_URL=http://api-gateway:8080
      - VAULT_SERVICE_URL=http://vault-service:8080
      - LOG_LEVEL=debug
    ports:
      - "8083:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      vault-service:
        condition: service_started
    networks:
      - eden_network

  # Eden Task Service
  task-service:
    build:
      context: .
      dockerfile: infrastructure/docker/base/service.Dockerfile
      args:
        SERVICE_NAME: task
    container_name: eden-task
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - DATABASE_URL=postgresql://eden:dev_password@postgres:5432/eden_dev
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_URL=http://api-gateway:8080
      - HUB_SERVICE_URL=http://hub-service:8080
      - LOG_LEVEL=debug
    ports:
      - "8084:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
      hub-service:
        condition: service_started
    networks:
      - eden_network

  # Eden Monitor Service
  monitor-service:
    build:
      context: .
      dockerfile: infrastructure/docker/base/service.Dockerfile
      args:
        SERVICE_NAME: monitor
    container_name: eden-monitor
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - DATABASE_URL=postgresql://eden:dev_password@postgres:5432/eden_dev
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_URL=http://api-gateway:8080
      - LOG_LEVEL=debug
    ports:
      - "8085:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    networks:
      - eden_network

  # Eden Sync Service
  sync-service:
    build:
      context: .
      dockerfile: infrastructure/docker/base/service.Dockerfile
      args:
        SERVICE_NAME: sync
    container_name: eden-sync
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - DATABASE_URL=postgresql://eden:dev_password@postgres:5432/eden_dev
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_URL=http://api-gateway:8080
      - LOG_LEVEL=debug
    ports:
      - "8086:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    networks:
      - eden_network

  # Eden Insight Service
  insight-service:
    build:
      context: .
      dockerfile: infrastructure/docker/base/service.Dockerfile
      args:
        SERVICE_NAME: insight
    container_name: eden-insight
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    environment:
      - DATABASE_URL=postgresql://eden:dev_password@postgres:5432/eden_dev
      - REDIS_URL=redis://redis:6379
      - API_GATEWAY_URL=http://api-gateway:8080
      - LOG_LEVEL=debug
    ports:
      - "8087:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      api-gateway:
        condition: service_healthy
    networks:
      - eden_network

  # Web UI (Development)
  web-ui:
    build:
      context: .
      dockerfile: infrastructure/docker/web/Dockerfile
    container_name: eden-web-ui
    environment:
      - API_BASE_URL=http://localhost:8080
      - NODE_ENV=development
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    networks:
      - eden_network
    volumes:
      - ./clients/web:/app
      - /app/node_modules

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  eden_network:
    driver: bridge
    name: eden_network